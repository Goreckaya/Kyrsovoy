//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Kursovoy.Model
{
    using System;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Appointment
    {
        public int ID_Appointment { get; set; }
        public int ID_Patient { get; set; }
        public System.DateTime Date { get; set; }
        public int ID_Department { get; set; }
        public int ID_MedicalOfficer { get; set; }
        public string Time { get; set; }
        public int ID_StatusPriema { get; set; }
    
        public virtual StatusPriema StatusPriema { get; set; }
        public string DateTime
        {
            get
            {
                string dateString = this.Date.ToString("dd.MM.yyyy"); if (this.Time == null)
                {
                    return dateString + " " + "Неизвестно";
                }
                else
                {
                    return dateString + " " + this.Time.ToString();
                }
            }
        }
        public string PatientFName
        {
            get
            {
                int IDPacient = this.ID_Patient;
                var Patient = helper.GetContext().Patient.Where(p => p.ID_Patient == IDPacient).FirstOrDefault();
                if (Patient != null)
                {
                    string PatientFName = Patient.FName;
                    return PatientFName;
                }
                else
                {
                    return "";
                }
            }
        }
        public string PatientName
        {
            get
            {
                int IDPacient = this.ID_Patient;
                var Patient = helper.GetContext().Patient.Where(p => p.ID_Patient == IDPacient).FirstOrDefault();
                if (Patient != null)
                {
                    string PatientFName = Patient.Name;
                    return PatientFName;
                }
                else
                {
                    return "";
                }
            }
        }
        public string PatientLName
        {
            get
            {
                int IDPacient = this.ID_Patient;
                var Patient = helper.GetContext().Patient.Where(p => p.ID_Patient == IDPacient).FirstOrDefault();
                if (Patient != null)
                {
                    string PatientFName = Patient.LName;
                    return PatientFName;
                }
                else
                {
                    return "";
                }
            }
        }
    }
}
